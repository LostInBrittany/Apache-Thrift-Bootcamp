//
// Autogenerated by Thrift Compiler (0.8.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//

Message = function(args) {
  this.contenu = null;
  this.utilisateur = null;
  if (args) {
    if (args.contenu !== undefined) {
      this.contenu = args.contenu;
    }
    if (args.utilisateur !== undefined) {
      this.utilisateur = args.utilisateur;
    }
  }
};
Message.prototype = {};
Message.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.contenu = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.utilisateur = new Utilisateur();
        this.utilisateur.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Message.prototype.write = function(output) {
  output.writeStructBegin('Message');
  if (this.contenu) {
    output.writeFieldBegin('contenu', Thrift.Type.STRING, 1);
    output.writeString(this.contenu);
    output.writeFieldEnd();
  }
  if (this.utilisateur) {
    output.writeFieldBegin('utilisateur', Thrift.Type.STRUCT, 2);
    this.utilisateur.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

